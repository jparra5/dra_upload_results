{
    "id": "ibm.devops.services.pipeline.dra_upload_results",
    "version": 1,
    "name_key": "ExtName",
    "desc_key": "ExtDesc",
    "extension_type": "Test",
    "message_key": "ExtMessage",
    "inputs": [
        {
            "type": "Artifacts",
            "inclusion" : "always"
        }
    ],
    "params": [
        {
            "name": "COMMAND",
            "type": "TextArea",
            "required": "true",
            "default_value" : "#!/bin/bash",
            "label_key": "COMMAND_KEY",
            "desc_key": "COMMAND_DESC"
        },
        {
            "name": "WORKING_DIRECTORY",
            "type": "Text",
            "required": "false",
            "default_value": "",
            "label_key": "WORKING_DIRECTORY_KEY",
            "desc_key": "WORKING_DIRECTORY_DESC"
        },
        {
            "name": "LIFE_CYCLE_STAGE_SELECT",
            "type": "Select",
            "required": "true",
            "default_value": "unittest",
            "label_key": "LIFE_CYCLE_STAGE_SELECT_KEY",
            "desc_key": "LIFE_CYCLE_STAGE_SELECT_DESC",
            "options": [
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_1_KEY",
                    "value": "code"
                },
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_2_KEY",
                    "value": "unittest"
                },
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_4_KEY",
                    "value": "fvt"
                }
            ]
        },
        {
            "name": "LOG_FILE",
            "type": "Text",
            "required": "true",
            "default_value": "",
            "label_key": "LOG_FILE_KEY",
            "desc_key": "LOG_FILE_DESC"
        },










        {
            "name": "ADDITIONAL_LIFE_CYCLE_STAGE_SELECT",
            "type": "Select",
            "required": "true",
            "default_value": "none",
            "label_key": "ADDITIONAL_LIFE_CYCLE_STAGE_SELECT_KEY",
            "desc_key": "LIFE_CYCLE_STAGE_SELECT_DESC",
            "options": [
                {
                    "label_key": "FORMAT_OPTION_1_KEY",
                    "value": "none"
                },
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_1_KEY",
                    "value": "code"
                },
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_2_KEY",
                    "value": "unittest"
                },
                {
                    "label_key": "LIFE_CYCLE_STAGE_OPTION_4_KEY",
                    "value": "fvt"
                }
            ]
        },
        {
            "name": "ADDITIONAL_LOG_FILE",
            "type": "Text",
            "required": "false",
            "default_value": "",
            "label_key": "ADDITIONAL_LOG_FILE_KEY",
            "desc_key": "LOG_FILE_DESC"
        }
    ],
    "outputs": [
        {
            "type": "Artifacts",
            "inclusion" : "always"
        },
        {
            "type": "Tests",
            "inclusion": "optional"
        }
    ],
    "execution": {
        "type": "JenkinsDocker",
        "shell": "#!/bin/bash

set +x
set +e

export DRA_LOG_FILE=\"#LOG_FILE#\"
export DRA_WORKING_DIRECTORY=\"#WORKING_DIRECTORY#\"
export DRA_LIFE_CYCLE_STAGE_SELECT=#LIFE_CYCLE_STAGE_SELECT#

export DRA_ADDITIONAL_LOG_FILE=\"#ADDITIONAL_LOG_FILE#\"
export DRA_ADDITIONAL_LIFE_CYCLE_STAGE_SELECT=#ADDITIONAL_LIFE_CYCLE_STAGE_SELECT#

export DRA_CURRENT_DIR=`pwd`

function custom_cmd {
    eval #COMMAND#
    CMDRESULT=$?
}

custom_cmd

##### change to the new directory of specified by the user
if [ -n \"${DRA_WORKING_DIRECTORY}\" ] && [ \"${DRA_WORKING_DIRECTORY}\" != \"\" ]; then
    cd \"${DRA_WORKING_DIRECTORY}\"
    CHANGE_WORKING_DIR_RESULT=$?

    if [ $CHANGE_WORKING_DIR_RESULT -ne 0 ]; then
        exit 1
    fi
else
    # need this in case the user has cd'd to a totally different location in custom script
    cd \"${DRA_CURRENT_DIR}\"
fi

##### install dev version of the plugin in stage1
if [[ $IDS_URL == *\"stage1\"* ]]; then
    npm install -g grunt-idra3@dev &>/dev/null
else
    npm install -g grunt-idra3 &>/dev/null
fi

##### upload the first file(s)
if [ -n \"${DRA_LOG_FILE}\" ] && [ \"${DRA_LOG_FILE}\" != \" \" ]; then
    if [[ -n \"$LOGICAL_ENV_NAME\" ]]; then
        idra --publishtestresult --filelocation=\"$DRA_LOG_FILE\" --type=$DRA_LIFE_CYCLE_STAGE_SELECT --env=$LOGICAL_ENV_NAME
    else
        idra --publishtestresult --filelocation=\"$DRA_LOG_FILE\" --type=$DRA_LIFE_CYCLE_STAGE_SELECT
    fi
else
    echo -e \"Result File Location not specified. No file was uploaded.\"
fi

##### upload additional files(s)
if [ -n \"${DRA_ADDITIONAL_LOG_FILE}\" ] && [ \"${DRA_ADDITIONAL_LOG_FILE}\" != \" \" ] && \
    [ -n \"${DRA_ADDITIONAL_LIFE_CYCLE_STAGE_SELECT}\" ] && [ \"${DRA_ADDITIONAL_LIFE_CYCLE_STAGE_SELECT}\" != \"none\" ]; then
    if [[ -n \"$LOGICAL_ENV_NAME\" ]]; then
        idra --publishtestresult --filelocation=\"$DRA_ADDITIONAL_LOG_FILE\" --type=$DRA_ADDITIONAL_LIFE_CYCLE_STAGE_SELECT --env=$LOGICAL_ENV_NAME
    else
        idra --publishtestresult --filelocation=\"$DRA_ADDITIONAL_LOG_FILE\" --type=$DRA_ADDITIONAL_LIFE_CYCLE_STAGE_SELECT
    fi
else
    echo -e \"Additional Result File Location or Additional Type of Metric not specified. No Additional file was uploaded.\"
fi
RESULT=$?

if [ $RESULT -ne 0 ] || [ $CMDRESULT -ne 0 ]; then
    exit 1
fi
    "},
    "project": "https://hub.jazz.net/project/alchemy/Alchemy-Ostanes",
    "project_example": "https://hub.jazz.net/pipeline/Osthanes/blazemeter_static",
    "project_contact": "jparra@us.ibm.com"
}
